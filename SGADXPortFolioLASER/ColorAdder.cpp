#include "stdafx.h"
ColorAdder::ColorAdder()
{
	componentName = "ColorAdder";
	ComponentDirection = Direction::Down;
	//Plus
	ComponentShape.emplace_back(-10.f, 0.f, 0.f, 0x00000000);
	ComponentShape.emplace_back(10.f, 0.f, 0.f, 0x00000000);
	ComponentShape.emplace_back(0.f, -10.f, 0.f, 0x00000000);
	ComponentShape.emplace_back(0.f, 10.f, 0.f, 0x00000000);
	//Arrow
	ComponentShape.emplace_back(10.f, 0.f, 0.f, 0x00000000);
	ComponentShape.emplace_back(20.f, 0.f, 0.f, 0x00000000);
	ComponentShape.emplace_back(0.f, 20.f, 0.f, 0x00000000);
	ComponentShape.emplace_back(-20.f, 0.f, 0.f, 0x00000000);
	ComponentShape.emplace_back(-10.f, 0.f, 0.f, 0x00000000);
	ComponentShape.emplace_back(-10.f, -20.f, 0.f, 0x00000000);
	ComponentShape.emplace_back(10.f, -20.f, 0.f, 0x00000000);
	ComponentShape.emplace_back(10.f, 0.f, 0.f, 0x00000000);
	//Circle
	ComponentShape.emplace_back(10.00000000000000000000000000000000f, 0.00000000000000000000000000000000f, 0.f, 0x0);
	ComponentShape.emplace_back(9.99698818696204227762791560962796f, 0.24541228522912289511381800366507f, 0.f, 0x0);
	ComponentShape.emplace_back(9.98795456205172449415385926840827f, 0.49067674327418014934565348994511f, 0.f, 0x0);
	ComponentShape.emplace_back(9.97290456678690162561906618066132f, 0.73564563599667431859074895328376f, 0.f, 0x0);
	ComponentShape.emplace_back(9.95184726672196973140671616420150f, 0.98017140329560603628777926132898f, 0.f, 0x0);
	ComponentShape.emplace_back(9.92479534598709989268172648735344f, 1.22410675199216201214369448280195f, 0.f, 0x0);
	ComponentShape.emplace_back(9.89176509964780947825602197553962f, 1.46730474455361736829672736348584f, 0.f, 0x0);
	ComponentShape.emplace_back(9.85277642388941288231762882787734f, 1.70961888760301228273874585283920f, 0.f, 0x0);
	ComponentShape.emplace_back(9.80785280403230430579242238309234f, 1.95090322016128236981558075058274f, 0.f, 0x0);
	ComponentShape.emplace_back(9.75702130038528636646333325188607f, 2.19101240156869803143990793614648f, 0.f, 0x0);
	ComponentShape.emplace_back(9.70031253194543907625302381347865f, 2.42980179903263859841899829916656f, 0.f, 0x0);
	ComponentShape.emplace_back(9.63776065795439862426974286790937f, 2.66712757474898376486294182541315f, 0.f, 0x0);
	ComponentShape.emplace_back(9.56940335732208779973007040098310f, 2.90284677254462319950789606082253f, 0.f, 0x0);
	ComponentShape.emplace_back(9.49528180593036630341430281987414f, 3.13681740398891495402722284779884f, 0.f, 0x0);
	ComponentShape.emplace_back(9.41544065183020784104428457794711f, 3.36889853392220040007032366702333f, 0.f, 0x0);
	ComponentShape.emplace_back(9.32992798834738934488086670171469f, 3.59895036534988133070100957411341f, 0.f, 0x0);
	ComponentShape.emplace_back(9.23879532511286782892057090066373f, 3.82683432365089792881462926743552f, 0.f, 0x0);
	ComponentShape.emplace_back(9.14209755703530646542276372201741f, 4.05241314004989838792880618711933f, 0.f, 0x0);
	ComponentShape.emplace_back(9.03989293123443360400415258482099f, 4.27555093430282084909777040593326f, 0.f, 0x0);
	ComponentShape.emplace_back(8.93224301195515302254079870181158f, 4.49611329654606528549720678711310f, 0.f, 0x0);
	ComponentShape.emplace_back(8.81921264348355116169386747060344f, 4.71396736825997653141939736087807f, 0.f, 0x0);
	ComponentShape.emplace_back(8.70086991108711416131882288027555f, 4.92898192229784015694349363911897f, 0.f, 0x0);
	ComponentShape.emplace_back(8.57728610000272162494638905627653f, 5.14102744193221639079638407565653f, 0.f, 0x0);
	ComponentShape.emplace_back(8.44853565249707116890931501984596f, 5.34997619887097108914986165473238f, 0.f, 0x0);
	ComponentShape.emplace_back(8.31469612302545257875863171648234f, 5.55570233019602177648721408331767f, 0.f, 0x0);
	ComponentShape.emplace_back(8.17584813151583666979149711551145f, 5.75808191417845360859928405261599f, 0.f, 0x0);
	ComponentShape.emplace_back(8.03207531480645009480667795287445f, 5.95699304492433334701217972906306f, 0.f, 0x0);
	ComponentShape.emplace_back(7.88346427626606338634474013815634f, 6.15231590580626797049035303643905f, 0.f, 0x0);
	ComponentShape.emplace_back(7.73010453362736971172353150905110f, 6.34393284163645532203190668951720f, 0.f, 0x0);
	ComponentShape.emplace_back(7.57208846506484611893483815947548f, 6.53172842953776733310178315150551f, 0.f, 0x0);
	ComponentShape.emplace_back(7.40951125354959128088694342295639f, 6.71558954847018352296572629711591f, 0.f, 0x0);
	ComponentShape.emplace_back(7.24247082951467024969360863906331f, 6.89540544737066873892672447254881f, 0.f, 0x0);
	ComponentShape.emplace_back(7.07106781186547550532850436866283f, 7.07106781186547461715008466853760f, 0.f, 0x0);
	ComponentShape.emplace_back(6.89540544737066962710514417267404f, 7.24247082951466936151518893893808f, 0.f, 0x0);
	ComponentShape.emplace_back(6.71558954847018352296572629711591f, 7.40951125354959128088694342295639f, 0.f, 0x0);
	ComponentShape.emplace_back(6.53172842953776733310178315150551f, 7.57208846506484434257799875922501f, 0.f, 0x0);
	ComponentShape.emplace_back(6.34393284163645532203190668951720f, 7.73010453362736971172353150905110f, 0.f, 0x0);
	ComponentShape.emplace_back(6.15231590580626797049035303643905f, 7.88346427626606249816632043803111f, 0.f, 0x0);
	ComponentShape.emplace_back(5.95699304492433512336901912931353f, 8.03207531480644831844983855262399f, 0.f, 0x0);
	ComponentShape.emplace_back(5.75808191417845360859928405261599f, 8.17584813151583666979149711551145f, 0.f, 0x0);
	ComponentShape.emplace_back(5.55570233019602266466563378344290f, 8.31469612302545257875863171648234f, 0.f, 0x0);
	ComponentShape.emplace_back(5.34997619887097286550670105498284f, 8.44853565249706939255247561959550f, 0.f, 0x0);
	ComponentShape.emplace_back(5.14102744193221639079638407565653f, 8.57728610000272162494638905627653f, 0.f, 0x0);
	ComponentShape.emplace_back(4.92898192229784104512191333924420f, 8.70086991108711416131882288027555f, 0.f, 0x0);
	ComponentShape.emplace_back(4.71396736825997830777623676112853f, 8.81921264348354938533702807035297f, 0.f, 0x0);
	ComponentShape.emplace_back(4.49611329654606617367562648723833f, 8.93224301195515302254079870181158f, 0.f, 0x0);
	ComponentShape.emplace_back(4.27555093430282173727619010605849f, 9.03989293123443360400415258482099f, 0.f, 0x0);
	ComponentShape.emplace_back(4.05241314004989838792880618711933f, 9.14209755703530646542276372201741f, 0.f, 0x0);
	ComponentShape.emplace_back(3.82683432365089837290383911749814f, 9.23879532511286782892057090066373f, 0.f, 0x0);
	ComponentShape.emplace_back(3.59895036534988266296863912430126f, 9.32992798834738934488086670171469f, 0.f, 0x0);
	ComponentShape.emplace_back(3.36889853392220040007032366702333f, 9.41544065183020784104428457794711f, 0.f, 0x0);
	ComponentShape.emplace_back(3.13681740398891584220564254792407f, 9.49528180593036630341430281987414f, 0.f, 0x0);
	ComponentShape.emplace_back(2.90284677254462319950789606082253f, 9.56940335732208957608690980123356f, 0.f, 0x0);
	ComponentShape.emplace_back(2.66712757474898420895215167547576f, 9.63776065795439862426974286790937f, 0.f, 0x0);
	ComponentShape.emplace_back(2.42980179903263993068662784935441f, 9.70031253194543907625302381347865f, 0.f, 0x0);
	ComponentShape.emplace_back(2.19101240156869758735069808608387f, 9.75702130038528636646333325188607f, 0.f, 0x0);
	ComponentShape.emplace_back(1.95090322016128325799400045070797f, 9.80785280403230430579242238309234f, 0.f, 0x0);
	ComponentShape.emplace_back(1.70961888760301361500637540302705f, 9.85277642388941288231762882787734f, 0.f, 0x0);
	ComponentShape.emplace_back(1.46730474455361736829672736348584f, 9.89176509964780947825602197553962f, 0.f, 0x0);
	ComponentShape.emplace_back(1.22410675199216267827750925789587f, 9.92479534598709989268172648735344f, 0.f, 0x0);
	ComponentShape.emplace_back(0.98017140329560770162231619906379f, 9.95184726672196795504987676395103f, 0.f, 0x0);
	ComponentShape.emplace_back(0.73564563599667454063535387831507f, 9.97290456678690162561906618066132f, 0.f, 0x0);
	ComponentShape.emplace_back(0.49067674327418125956867811510165f, 9.98795456205172449415385926840827f, 0.f, 0x0);
	ComponentShape.emplace_back(0.24541228522912264531363746300485f, 9.99698818696204227762791560962796f, 0.f, 0x0);
	ComponentShape.emplace_back(0.00000000000000000000000000000000f, 10.00000000000000000000000000000000f, 0.f, 0x0);
	ComponentShape.emplace_back(-0.24541228522912142406831037533266f, 9.99698818696204227762791560962796f, 0.f, 0x0);
	ComponentShape.emplace_back(-0.49067674327418009383450225868728f, 9.98795456205172449415385926840827f, 0.f, 0x0);
	ComponentShape.emplace_back(-0.73564563599667331939002679064288f, 9.97290456678690162561906618066132f, 0.f, 0x0);
	ComponentShape.emplace_back(-0.98017140329560648037698911139159f, 9.95184726672196973140671616420150f, 0.f, 0x0);
	ComponentShape.emplace_back(-1.22410675199216156805448463273933f, 9.92479534598709989268172648735344f, 0.f, 0x0);
	ComponentShape.emplace_back(-1.46730474455361648011830766336061f, 9.89176509964780947825602197553962f, 0.f, 0x0);
	ComponentShape.emplace_back(-1.70961888760301250478335077787051f, 9.85277642388941288231762882787734f, 0.f, 0x0);
	ComponentShape.emplace_back(-1.95090322016128192572637090052012f, 9.80785280403230430579242238309234f, 0.f, 0x0);
	ComponentShape.emplace_back(-2.19101240156869669917227838595863f, 9.75702130038528636646333325188607f, 0.f, 0x0);
	ComponentShape.emplace_back(-2.42980179903263859841899829916656f, 9.70031253194543907625302381347865f, 0.f, 0x0);
	ComponentShape.emplace_back(-2.66712757474898332077373197535053f, 9.63776065795439862426974286790937f, 0.f, 0x0);
	ComponentShape.emplace_back(-2.90284677254462142315105666057207f, 9.56940335732208957608690980123356f, 0.f, 0x0);
	ComponentShape.emplace_back(-3.13681740398891406584880314767361f, 9.49528180593036630341430281987414f, 0.f, 0x0);
	ComponentShape.emplace_back(-3.36889853392219951189190396689810f, 9.41544065183020784104428457794711f, 0.f, 0x0);
	ComponentShape.emplace_back(-3.59895036534988177479021942417603f, 9.32992798834738934488086670171469f, 0.f, 0x0);
	ComponentShape.emplace_back(-3.82683432365089704063620956731029f, 9.23879532511286782892057090066373f, 0.f, 0x0);
	ComponentShape.emplace_back(-4.05241314004989749975038648699410f, 9.14209755703530646542276372201741f, 0.f, 0x0);
	ComponentShape.emplace_back(-4.27555093430281907274093100568280f, 9.03989293123443360400415258482099f, 0.f, 0x0);
	ComponentShape.emplace_back(-4.49611329654606706185404618736356f, 8.93224301195515124618395930156112f, 0.f, 0x0);
	ComponentShape.emplace_back(-4.71396736825997741959781706100330f, 8.81921264348355116169386747060344f, 0.f, 0x0);
	ComponentShape.emplace_back(-4.92898192229784015694349363911897f, 8.70086991108711416131882288027555f, 0.f, 0x0);
	ComponentShape.emplace_back(-5.14102744193221639079638407565653f, 8.57728610000272162494638905627653f, 0.f, 0x0);
	ComponentShape.emplace_back(-5.34997619887097020097144195460714f, 8.44853565249707294526615442009643f, 0.f, 0x0);
	ComponentShape.emplace_back(-5.55570233019602000013037468306720f, 8.31469612302545435511547111673281f, 0.f, 0x0);
	ComponentShape.emplace_back(-5.75808191417845360859928405261599f, 8.17584813151583666979149711551145f, 0.f, 0x0);
	ComponentShape.emplace_back(-5.95699304492433334701217972906306f, 8.03207531480645009480667795287445f, 0.f, 0x0);
	ComponentShape.emplace_back(-6.15231590580626708231193333631381f, 7.88346427626606338634474013815634f, 0.f, 0x0);
	ComponentShape.emplace_back(-6.34393284163645354567506728926674f, 7.73010453362737059990195120917633f, 0.f, 0x0);
	ComponentShape.emplace_back(-6.53172842953776555674494375125505f, 7.57208846506484700711325785960071f, 0.f, 0x0);
	ComponentShape.emplace_back(-6.71558954847018441114414599724114f, 7.40951125354959039270852372283116f, 0.f, 0x0);
	ComponentShape.emplace_back(-6.89540544737066962710514417267404f, 7.24247082951466936151518893893808f, 0.f, 0x0);
	ComponentShape.emplace_back(-7.07106781186547461715008466853760f, 7.07106781186547550532850436866283f, 0.f, 0x0);
	ComponentShape.emplace_back(-7.24247082951466758515834953868762f, 6.89540544737067051528356387279928f, 0.f, 0x0);
	ComponentShape.emplace_back(-7.40951125354958861635168432258070f, 6.71558954847018529932256569736637f, 0.f, 0x0);
	ComponentShape.emplace_back(-7.57208846506484611893483815947548f, 6.53172842953776644492336345138028f, 0.f, 0x0);
	ComponentShape.emplace_back(-7.73010453362736971172353150905110f, 6.34393284163645532203190668951720f, 0.f, 0x0);
	ComponentShape.emplace_back(-7.88346427626606249816632043803111f, 6.15231590580626885866877273656428f, 0.f, 0x0);
	ComponentShape.emplace_back(-8.03207531480644831844983855262399f, 5.95699304492433512336901912931353f, 0.f, 0x0);
	ComponentShape.emplace_back(-8.17584813151583666979149711551145f, 5.75808191417845449677770375274122f, 0.f, 0x0);
	ComponentShape.emplace_back(-8.31469612302545257875863171648234f, 5.55570233019602177648721408331767f, 0.f, 0x0);
	ComponentShape.emplace_back(-8.44853565249707116890931501984596f, 5.34997619887097108914986165473238f, 0.f, 0x0);
	ComponentShape.emplace_back(-8.57728610000271984858954965602607f, 5.14102744193221816715322347590700f, 0.f, 0x0);
	ComponentShape.emplace_back(-8.70086991108711416131882288027555f, 4.92898192229784193330033303936943f, 0.f, 0x0);
	ComponentShape.emplace_back(-8.81921264348354938533702807035297f, 4.71396736825997830777623676112853f, 0.f, 0x0);
	ComponentShape.emplace_back(-8.93224301195515124618395930156112f, 4.49611329654606883821088558761403f, 0.f, 0x0);
	ComponentShape.emplace_back(-9.03989293123443360400415258482099f, 4.27555093430281996091935070580803f, 0.f, 0x0);
	ComponentShape.emplace_back(-9.14209755703530646542276372201741f, 4.05241314004989927610722588724457f, 0.f, 0x0);
	ComponentShape.emplace_back(-9.23879532511286782892057090066373f, 3.82683432365089881699304896756075f, 0.f, 0x0);
	ComponentShape.emplace_back(-9.32992798834738934488086670171469f, 3.59895036534988310705784897436388f, 0.f, 0x0);
	ComponentShape.emplace_back(-9.41544065183020606468744517769665f, 3.36889853392220306460558276739903f, 0.f, 0x0);
	ComponentShape.emplace_back(-9.49528180593036630341430281987414f, 3.13681740398891406584880314767361f, 0.f, 0x0);
	ComponentShape.emplace_back(-9.56940335732208779973007040098310f, 2.90284677254462408768631576094776f, 0.f, 0x0);
	ComponentShape.emplace_back(-9.63776065795439862426974286790937f, 2.66712757474898465304136152553838f, 0.f, 0x0);
	ComponentShape.emplace_back(-9.70031253194543907625302381347865f, 2.42980179903264081886504754947964f, 0.f, 0x0);
	ComponentShape.emplace_back(-9.75702130038528459010649385163561f, 2.19101240156870069597516703652218f, 0.f, 0x0);
	ComponentShape.emplace_back(-9.80785280403230430579242238309234f, 1.95090322016128614457386447611498f, 0.f, 0x0);
	ComponentShape.emplace_back(-9.85277642388941288231762882787734f, 1.70961888760301228273874585283920f, 0.f, 0x0);
	ComponentShape.emplace_back(-9.89176509964780947825602197553962f, 1.46730474455361803443054213857977f, 0.f, 0x0);
	ComponentShape.emplace_back(-9.92479534598709989268172648735344f, 1.22410675199216356645592895802110f, 0.f, 0x0);
	ComponentShape.emplace_back(-9.95184726672196795504987676395103f, 0.98017140329560825673382851164206f, 0.f, 0x0);
	ComponentShape.emplace_back(-9.97290456678690162561906618066132f, 0.73564563599667731619291544120642f, 0.f, 0x0);
	ComponentShape.emplace_back(-9.98795456205172449415385926840827f, 0.49067674327417964974529240862466f, 0.f, 0x0);
	ComponentShape.emplace_back(-9.99698818696204227762791560962796f, 0.24541228522912325593630100684095f, 0.f, 0x0);
	ComponentShape.emplace_back(-10.00000000000000000000000000000000f, 0.00000000000000000000000000000000f, 0.f, 0x0);
	ComponentShape.emplace_back(-9.99698818696204227762791560962796f, -0.24541228522912078569007121586765f, 0.f, 0x0);
	ComponentShape.emplace_back(-9.98795456205172449415385926840827f, -0.49067674327417720725463823328028f, 0.f, 0x0);
	ComponentShape.emplace_back(-9.97290456678690162561906618066132f, -0.73564563599667498472456372837769f, 0.f, 0x0);
	ComponentShape.emplace_back(-9.95184726672196973140671616420150f, -0.98017140329560592526547679881332f, 0.f, 0x0);
	ComponentShape.emplace_back(-9.92479534598709989268172648735344f, -1.22410675199216090192066985764541f, 0.f, 0x0);
	ComponentShape.emplace_back(-9.89176509964780947825602197553962f, -1.46730474455361581398449288826669f, 0.f, 0x0);
	ComponentShape.emplace_back(-9.85277642388941288231762882787734f, -1.70961888760300961820348675246350f, 0.f, 0x0);
	ComponentShape.emplace_back(-9.80785280403230430579242238309234f, -1.95090322016128370208321030077059f, 0.f, 0x0);
	ComponentShape.emplace_back(-9.75702130038528636646333325188607f, -2.19101240156869803143990793614648f, 0.f, 0x0);
	ComponentShape.emplace_back(-9.70031253194543907625302381347865f, -2.42980179903263815432978844910394f, 0.f, 0x0);
	ComponentShape.emplace_back(-9.63776065795439862426974286790937f, -2.66712757474898243259531227522530f, 0.f, 0x0);
	ComponentShape.emplace_back(-9.56940335732208957608690980123356f, -2.90284677254462097906184681050945f, 0.f, 0x0);
	ComponentShape.emplace_back(-9.49528180593036807977114222012460f, -3.13681740398891184540275389736053f, 0.f, 0x0);
	ComponentShape.emplace_back(-9.41544065183020784104428457794711f, -3.36889853392220128824874336714856f, 0.f, 0x0);
	ComponentShape.emplace_back(-9.32992798834738934488086670171469f, -3.59895036534988133070100957411341f, 0.f, 0x0);
	ComponentShape.emplace_back(-9.23879532511286782892057090066373f, -3.82683432365089659654699971724767f, 0.f, 0x0);
	ComponentShape.emplace_back(-9.14209755703530646542276372201741f, -4.05241314004989661157196678686887f, 0.f, 0x0);
	ComponentShape.emplace_back(-9.03989293123443360400415258482099f, -4.27555093430281818456251130555756f, 0.f, 0x0);
	ComponentShape.emplace_back(-8.93224301195515302254079870181158f, -4.49611329654606617367562648723833f, 0.f, 0x0);
	ComponentShape.emplace_back(-8.81921264348355116169386747060344f, -4.71396736825997653141939736087807f, 0.f, 0x0);
	ComponentShape.emplace_back(-8.70086991108711416131882288027555f, -4.92898192229783926876507393899374f, 0.f, 0x0);
	ComponentShape.emplace_back(-8.57728610000272162494638905627653f, -5.14102744193221550261796437553130f, 0.f, 0x0);
	ComponentShape.emplace_back(-8.44853565249707294526615442009643f, -5.34997619887096931279302225448191f, 0.f, 0x0);
	ComponentShape.emplace_back(-8.31469612302545435511547111673281f, -5.55570233019602000013037468306720f, 0.f, 0x0);
	ComponentShape.emplace_back(-8.17584813151583666979149711551145f, -5.75808191417845360859928405261599f, 0.f, 0x0);
	ComponentShape.emplace_back(-8.03207531480645009480667795287445f, -5.95699304492433245883376002893783f, 0.f, 0x0);
	ComponentShape.emplace_back(-7.88346427626606338634474013815634f, -6.15231590580626708231193333631381f, 0.f, 0x0);
	ComponentShape.emplace_back(-7.73010453362737059990195120917633f, -6.34393284163645265749664758914150f, 0.f, 0x0);
	ComponentShape.emplace_back(-7.57208846506484789529167755972594f, -6.53172842953776555674494375125505f, 0.f, 0x0);
	ComponentShape.emplace_back(-7.40951125354959128088694342295639f, -6.71558954847018441114414599724114f, 0.f, 0x0);
	ComponentShape.emplace_back(-7.24247082951467024969360863906331f, -6.89540544737066873892672447254881f, 0.f, 0x0);
	ComponentShape.emplace_back(-7.07106781186547728168534376891330f, -7.07106781186547461715008466853760f, 0.f, 0x0);
	ComponentShape.emplace_back(-6.89540544737067051528356387279928f, -7.24247082951466758515834953868762f, 0.f, 0x0);
	ComponentShape.emplace_back(-6.71558954847018618750098539749160f, -7.40951125354958861635168432258070f, 0.f, 0x0);
	ComponentShape.emplace_back(-6.53172842953777088581546195200644f, -7.57208846506484256622115935897455f, 0.f, 0x0);
	ComponentShape.emplace_back(-6.34393284163645887474558549001813f, -7.73010453362736704718827240867540f, 0.f, 0x0);
	ComponentShape.emplace_back(-6.15231590580627241138245153706521f, -7.88346427626605894545264163753018f, 0.f, 0x0);
	ComponentShape.emplace_back(-5.95699304492433157065534032881260f, -8.03207531480645009480667795287445f, 0.f, 0x0);
	ComponentShape.emplace_back(-5.75808191417845272042086435249075f, -8.17584813151583844614833651576191f, 0.f, 0x0);
	ComponentShape.emplace_back(-5.55570233019602177648721408331767f, -8.31469612302545257875863171648234f, 0.f, 0x0);
	ComponentShape.emplace_back(-5.34997619887097286550670105498284f, -8.44853565249706939255247561959550f, 0.f, 0x0);
	ComponentShape.emplace_back(-5.14102744193221816715322347590700f, -8.57728610000271984858954965602607f, 0.f, 0x0);
	ComponentShape.emplace_back(-4.92898192229784193330033303936943f, -8.70086991108711416131882288027555f, 0.f, 0x0);
	ComponentShape.emplace_back(-4.71396736825997830777623676112853f, -8.81921264348354938533702807035297f, 0.f, 0x0);
	ComponentShape.emplace_back(-4.49611329654606883821088558761403f, -8.93224301195515124618395930156112f, 0.f, 0x0);
	ComponentShape.emplace_back(-4.27555093430282440181144920643419f, -9.03989293123443182764731318457052f, 0.f, 0x0);
	ComponentShape.emplace_back(-4.05241314004990371699932438787073f, -9.14209755703530468906592432176694f, 0.f, 0x0);
	ComponentShape.emplace_back(-3.82683432365090325788514746818691f, -9.23879532511286427620689210016280f, 0.f, 0x0);
	ComponentShape.emplace_back(-3.59895036534987955434417017386295f, -9.32992798834738934488086670171469f, 0.f, 0x0);
	ComponentShape.emplace_back(-3.36889853392219951189190396689810f, -9.41544065183020784104428457794711f, 0.f, 0x0);
	ComponentShape.emplace_back(-3.13681740398891450993801299773622f, -9.49528180593036630341430281987414f, 0.f, 0x0);
	ComponentShape.emplace_back(-2.90284677254462453177552561101038f, -9.56940335732208779973007040098310f, 0.f, 0x0);
	ComponentShape.emplace_back(-2.66712757474898509713057137560099f, -9.63776065795439862426974286790937f, 0.f, 0x0);
	ComponentShape.emplace_back(-2.42980179903264126295425739954226f, -9.70031253194543907625302381347865f, 0.f, 0x0);
	ComponentShape.emplace_back(-2.19101240156870114006437688658480f, -9.75702130038528459010649385163561f, 0.f, 0x0);
	ComponentShape.emplace_back(-1.95090322016128658866307432617759f, -9.80785280403230252943558298284188f, 0.f, 0x0);
	ComponentShape.emplace_back(-1.70961888760301694567544927849667f, -9.85277642388941110596078942762688f, 0.f, 0x0);
	ComponentShape.emplace_back(-1.46730474455362314145645541429985f, -9.89176509964780947825602197553962f, 0.f, 0x0);
	ComponentShape.emplace_back(-1.22410675199215956965304030745756f, -9.92479534598709989268172648735344f, 0.f, 0x0);
	ComponentShape.emplace_back(-0.98017140329560448197554478610982f, -9.95184726672196973140671616420150f, 0.f, 0x0);
	ComponentShape.emplace_back(-0.73564563599667354143463171567419f, -9.97290456678690162561906618066132f, 0.f, 0x0);
	ComponentShape.emplace_back(-0.49067674327418031587910718371859f, -9.98795456205172449415385926840827f, 0.f, 0x0);
	ComponentShape.emplace_back(-0.24541228522912389431454016630596f, -9.99698818696204227762791560962796f, 0.f, 0x0);
	ComponentShape.emplace_back(-0.00000000000000000000000000000000f, -10.00000000000000000000000000000000f, 0.f, 0x0);
	ComponentShape.emplace_back(0.24541228522912020282298328766046f, -9.99698818696204227762791560962796f, 0.f, 0x0);
	ComponentShape.emplace_back(0.49067674327417659663197468944418f, -9.98795456205172449415385926840827f, 0.f, 0x0);
	ComponentShape.emplace_back(0.73564563599666987769865045265760f, -9.97290456678690162561906618066132f, 0.f, 0x0);
	ComponentShape.emplace_back(0.98017140329560092926186598560889f, -9.95184726672196973140671616420150f, 0.f, 0x0);
	ComponentShape.emplace_back(1.22410675199215601693936150695663f, -9.92479534598709989268172648735344f, 0.f, 0x0);
	ComponentShape.emplace_back(1.46730474455361936669817168876762f, -9.89176509964780947825602197553962f, 0.f, 0x0);
	ComponentShape.emplace_back(1.70961888760301317091716555296443f, -9.85277642388941288231762882787734f, 0.f, 0x0);
	ComponentShape.emplace_back(1.95090322016128303594939552567666f, -9.80785280403230430579242238309234f, 0.f, 0x0);
	ComponentShape.emplace_back(2.19101240156869758735069808608387f, -9.75702130038528636646333325188607f, 0.f, 0x0);
	ComponentShape.emplace_back(2.42980179903263771024057859904133f, -9.70031253194543907625302381347865f, 0.f, 0x0);
	ComponentShape.emplace_back(2.66712757474898198850610242516268f, -9.63776065795439862426974286790937f, 0.f, 0x0);
	ComponentShape.emplace_back(2.90284677254462053497263696044683f, -9.56940335732208957608690980123356f, 0.f, 0x0);
	ComponentShape.emplace_back(3.13681740398891140131354404729791f, -9.49528180593036807977114222012460f, 0.f, 0x0);
	ComponentShape.emplace_back(3.36889853392219595917822516639717f, -9.41544065183020961740112397819757f, 0.f, 0x0);
	ComponentShape.emplace_back(3.59895036534987600163049137336202f, -9.32992798834739112123770610196516f, 0.f, 0x0);
	ComponentShape.emplace_back(3.82683432365090014926067851774860f, -9.23879532511286605256373150041327f, 0.f, 0x0);
	ComponentShape.emplace_back(4.05241314004990016428564558736980f, -9.14209755703530646542276372201741f, 0.f, 0x0);
	ComponentShape.emplace_back(4.27555093430282173727619010605849f, -9.03989293123443360400415258482099f, 0.f, 0x0);
	ComponentShape.emplace_back(4.49611329654606617367562648723833f, -8.93224301195515302254079870181158f, 0.f, 0x0);
	ComponentShape.emplace_back(4.71396736825997564324097766075283f, -8.81921264348355116169386747060344f, 0.f, 0x0);
	ComponentShape.emplace_back(4.92898192229783838058665423886850f, -8.70086991108711416131882288027555f, 0.f, 0x0);
	ComponentShape.emplace_back(5.14102744193221550261796437553130f, -8.57728610000272162494638905627653f, 0.f, 0x0);
	ComponentShape.emplace_back(5.34997619887096931279302225448191f, -8.44853565249707294526615442009643f, 0.f, 0x0);
	ComponentShape.emplace_back(5.55570233019601822377353528281674f, -8.31469612302545435511547111673281f, 0.f, 0x0);
	ComponentShape.emplace_back(5.75808191417844916770718555198982f, -8.17584813151584022250517591601238f, 0.f, 0x0);
	ComponentShape.emplace_back(5.95699304492432890612008122843690f, -8.03207531480645187116351735312492f, 0.f, 0x0);
	ComponentShape.emplace_back(6.15231590580627063502561213681474f, -7.88346427626606072180948103778064f, 0.f, 0x0);
	ComponentShape.emplace_back(6.34393284163645621021032638964243f, -7.73010453362736882354511180892587f, 0.f, 0x0);
	ComponentShape.emplace_back(6.53172842953776733310178315150551f, -7.57208846506484611893483815947548f, 0.f, 0x0);
	ComponentShape.emplace_back(6.71558954847018352296572629711591f, -7.40951125354959128088694342295639f, 0.f, 0x0);
	ComponentShape.emplace_back(6.89540544737066873892672447254881f, -7.24247082951467024969360863906331f, 0.f, 0x0);
	ComponentShape.emplace_back(7.07106781186547372897166496841237f, -7.07106781186547728168534376891330f, 0.f, 0x0);
	ComponentShape.emplace_back(7.24247082951466669697992983856238f, -6.89540544737067140346198357292451f, 0.f, 0x0);
	ComponentShape.emplace_back(7.40951125354958861635168432258070f, -6.71558954847018618750098539749160f, 0.f, 0x0);
	ComponentShape.emplace_back(7.57208846506484256622115935897455f, -6.53172842953777088581546195200644f, 0.f, 0x0);
	ComponentShape.emplace_back(7.73010453362736704718827240867540f, -6.34393284163645887474558549001813f, 0.f, 0x0);
	ComponentShape.emplace_back(7.88346427626605894545264163753018f, -6.15231590580627418773929093731567f, 0.f, 0x0);
	ComponentShape.emplace_back(8.03207531480645009480667795287445f, -5.95699304492433245883376002893783f, 0.f, 0x0);
	ComponentShape.emplace_back(8.17584813151583666979149711551145f, -5.75808191417845272042086435249075f, 0.f, 0x0);
	ComponentShape.emplace_back(8.31469612302545257875863171648234f, -5.55570233019602177648721408331767f, 0.f, 0x0);
	ComponentShape.emplace_back(8.44853565249706939255247561959550f, -5.34997619887097286550670105498284f, 0.f, 0x0);
	ComponentShape.emplace_back(8.57728610000271984858954965602607f, -5.14102744193221905533164317603223f, 0.f, 0x0);
	ComponentShape.emplace_back(8.70086991108711416131882288027555f, -4.92898192229784282147875273949467f, 0.f, 0x0);
	ComponentShape.emplace_back(8.81921264348354760898018867010251f, -4.71396736825997919595465646125376f, 0.f, 0x0);
	ComponentShape.emplace_back(8.93224301195515124618395930156112f, -4.49611329654606972638930528773926f, 0.f, 0x0);
	ComponentShape.emplace_back(9.03989293123443182764731318457052f, -4.27555093430282528998986890655942f, 0.f, 0x0);
	ComponentShape.emplace_back(9.14209755703530468906592432176694f, -4.05241314004990371699932438787073f, 0.f, 0x0);
	ComponentShape.emplace_back(9.23879532511286427620689210016280f, -3.82683432365090414606356716831215f, 0.f, 0x0);
	ComponentShape.emplace_back(9.32992798834738934488086670171469f, -3.59895036534987999843338002392557f, 0.f, 0x0);
	ComponentShape.emplace_back(9.41544065183020784104428457794711f, -3.36889853392219995598111381696071f, 0.f, 0x0);
	ComponentShape.emplace_back(9.49528180593036630341430281987414f, -3.13681740398891495402722284779884f, 0.f, 0x0);
	ComponentShape.emplace_back(9.56940335732208779973007040098310f, -2.90284677254462497586473546107300f, 0.f, 0x0);
	ComponentShape.emplace_back(9.63776065795439862426974286790937f, -2.66712757474898598530899107572623f, 0.f, 0x0);
	ComponentShape.emplace_back(9.70031253194543907625302381347865f, -2.42980179903264170704346724960487f, 0.f, 0x0);
	ComponentShape.emplace_back(9.75702130038528459010649385163561f, -2.19101240156870158415358673664741f, 0.f, 0x0);
	ComponentShape.emplace_back(9.80785280403230252943558298284188f, -1.95090322016128725479688910127152f, 0.f, 0x0);
	ComponentShape.emplace_back(9.85277642388941110596078942762688f, -1.70961888760301761180926405359060f, 0.f, 0x0);
	ComponentShape.emplace_back(9.89176509964780947825602197553962f, -1.46730474455362380759027018939378f, 0.f, 0x0);
	ComponentShape.emplace_back(9.92479534598709989268172648735344f, -1.22410675199216023578685508255148f, 0.f, 0x0);
	ComponentShape.emplace_back(9.95184726672196973140671616420150f, -0.98017140329560503708705709868809f, 0.f, 0x0);
	ComponentShape.emplace_back(9.97290456678690162561906618066132f, -0.73564563599667409654614402825246f, 0.f, 0x0);
	ComponentShape.emplace_back(9.98795456205172449415385926840827f, -0.49067674327418092650177072755469f, 0.f, 0x0);
	ComponentShape.emplace_back(9.99698818696204227762791560962796f, -0.24541228522912447718162809451314f, 0.f, 0x0);
}

ColorAdder::ColorAdder(float x, float y, Direction myDir) : ColorAdder{}
{
	SetDir(myDir);
	SetPos(x, y);
}

void ColorAdder::Render()
{
	vector<Vertex> tempVertex;
	int shapeIndex = ComponentShape.size();
	auto timeNow = steady_clock::now();
	for (auto it = tempAnimEffect.begin(); it != tempAnimEffect.end(); )
	{
		if ((*it)->UpdateNCheckForDelete(timeNow))
		{
			it = tempAnimEffect.erase(it);
		}
		else 
		{
			(*it)->Render();
			it++;
		}
	}

	for (int i = 0; i<shapeIndex; i++)
	{
		tempVertex.push_back(ComponentShape[i]);
		tempVertex[i].position = { tempVertex[i].position[0] + xPos, tempVertex[i].position[1] + yPos, 0.f };
	}

	//draw Plus
	DEVICE->DrawPrimitiveUP(D3DPT_LINELIST, 2, &tempVertex[0], sizeof(Vertex));
	//draw Arrow
	DEVICE->DrawPrimitiveUP(D3DPT_LINESTRIP, 7, &tempVertex[4], sizeof(Vertex));
	//draw Circle
	DEVICE->DrawPrimitiveUP(D3DPT_LINESTRIP, 255, &tempVertex[12], sizeof(Vertex));
}

void ColorAdder::beamComing(shared_ptr<BeamPulse> inBeam)
{
	switch (ComponentDirection) 
	{
	case Direction::Up:
		if (inBeam->getDirection() != Direction::Down) 
		{
			switch(inBeam->GetColor()) 
			{
			case BeamColor::Red:
				gotRed		= true;
				break;
			case BeamColor::Green:
				gotGreen	= true;
				break;
			case BeamColor::Blue:
				gotBlue		= true;
				break;
			case BeamColor::Cyan:
				gotBlue		= true;
				gotGreen	= true;
				break;
			case BeamColor::Magenta:
				gotRed		= true;
				gotBlue		= true;
				break;
			case BeamColor::Yellow:
				gotRed		= true;
				gotGreen	= true;
				break;
			case BeamColor::White:
				gotRed		= true;
				gotGreen	= true;
				gotBlue		= true;
				break;
			}
		}
		break;
	case Direction::Down:
		if (inBeam->getDirection() != Direction::Up)
		{
			switch (inBeam->GetColor())
			{
			case BeamColor::Red:
				gotRed = true;
				break;
			case BeamColor::Green:
				gotGreen = true;
				break;
			case BeamColor::Blue:
				gotBlue = true;
				break;
			case BeamColor::Cyan:
				gotBlue = true;
				gotGreen = true;
				break;
			case BeamColor::Magenta:
				gotRed = true;
				gotBlue = true;
				break;
			case BeamColor::Yellow:
				gotRed = true;
				gotGreen = true;
				break;
			case BeamColor::White:
				gotRed = true;
				gotGreen = true;
				gotBlue = true;
				break;
			}
		}
		break;
	case Direction::Right:
		if (inBeam->getDirection() != Direction::Left)
		{
			switch (inBeam->GetColor())
			{
			case BeamColor::Red:
				gotRed = true;
				break;
			case BeamColor::Green:
				gotGreen = true;
				break;
			case BeamColor::Blue:
				gotBlue = true;
				break;
			case BeamColor::Cyan:
				gotBlue = true;
				gotGreen = true;
				break;
			case BeamColor::Magenta:
				gotRed = true;
				gotBlue = true;
				break;
			case BeamColor::Yellow:
				gotRed = true;
				gotGreen = true;
				break;
			case BeamColor::White:
				gotRed = true;
				gotGreen = true;
				gotBlue = true;
				break;
			}
		}
		break;
	case Direction::Left:
		if (inBeam->getDirection() != Direction::Right)
		{
			switch (inBeam->GetColor())
			{
			case BeamColor::Red:
				gotRed = true;
				break;
			case BeamColor::Green:
				gotGreen = true;
				break;
			case BeamColor::Blue:
				gotBlue = true;
				break;
			case BeamColor::Cyan:
				gotBlue = true;
				gotGreen = true;
				break;
			case BeamColor::Magenta:
				gotRed = true;
				gotBlue = true;
				break;
			case BeamColor::Yellow:
				gotRed = true;
				gotGreen = true;
				break;
			case BeamColor::White:
				gotRed = true;
				gotGreen = true;
				gotBlue = true;
				break;
			}
		}
		break;
	}
}
